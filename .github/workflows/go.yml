name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: |
          go test -v -race ./... -covermode=atomic -coverprofile=coverage.out

      - name: Go Coverage Badge
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: coverage.out

      - name: Verify changed files
        uses: tj-actions/verify-changed-files@v17
        id: verify-changed-files
        with:
          files: README.md

      - name: Commit coverage badge
        if: steps.verify-changed-files.outputs.files_changed == 'true' && github.event_name == 'push' && github.ref_name != 'main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."

      - name: Push coverage badge  
        if: steps.verify-changed-files.outputs.files_changed == 'true' && github.event_name == 'push' && github.ref_name != 'main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:${{ github.ref_name }}

      - name: Coverage badge update skipped (protected branch)
        if: steps.verify-changed-files.outputs.files_changed == 'true' && github.event_name == 'push' && github.ref_name == 'main'
        run: |
          echo "Coverage badge update skipped for protected main branch"
          echo "Current coverage: $(go tool cover -func=coverage.out | grep total: | awk '{print $3}')"
